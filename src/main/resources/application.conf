akka-persistence-jdbc {
  shared-databases {
    slick {
      profile = "slick.jdbc.PostgresProfile$"
      db {
        host = ${POSTGRES_HOST}
        url = "jdbc:postgresql://"${POSTGRES_HOST}":"${POSTGRES_PORT}"/"${POSTGRES_DB}"?reWriteBatchedInserts=true"
        user = ${POSTGRES_USER}
        password = ${POSTGRES_PASSWORD}
        driver = "org.postgresql.Driver"
        numThreads = 5
        maxConnections = 5
        minConnections = 1
      }
    }
  }
}

jdbc-journal {
  use-shared-db = "slick"
}

jdbc-snapshot-store {
  use-shared-db = "slick"
}

jdbc-read-journal {
  use-shared-db = "slick"
}

service {
  host = "0.0.0.0"
  port = ${PORT}
  users {
    jwt {
      expiresInSeconds = ${JWT_EXPIRES_IN_SECONDS}
      issuer = ${JWT_ISSUER}
      secretKey = ${JWT_SECRET_KEY}
    }
  }
}

akka {
  actor {
    provider = "cluster"

    serialization-bindings {
      "com.marcusmonteirodesouza.realworld.common.traits.CborSerializable" = jackson-cbor
    }
  }

  remote {
    artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 25521
    }
  }

  cluster {
    seed-nodes = [
      "akka://realworld-backend-scala-akka@127.0.0.1:25521"
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }

    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}